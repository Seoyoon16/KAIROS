# 리스트 정렬
arr.sort() // reverse 옵션: True or False, key 옵션
new_arr = sorted(arr)

# 클래스
-생성자: 인스턴스 생성 시 가장 먼저 자동으로 실행
인스턴스 생성 시 꼭 실행되어야하는 내용으로 구성 ex) 초기화 
def __init__(self, v1, v2):
    self.v1 = v1
    self.v2 = v2

-메소드들 -> 첫번째 매개변수, 보통 self, 꼭 정의해야 함 -> 인스턴스가 그 매개변수로 들어갈 것임
(메소드: 클래스 내의 함수)
self는 그 인스턴스를 가리킴

-인캡슐레이션: 객체를 보호, 데이터, 변수가 외부 영향으르 받지 않도록 캡슐화

-파이썬은 메소드 안밖에서 인스턴스 변수에 접근 가능 --> 불가능하게 하려면?
def getValue(self):
    return self.value
def setValue(Self, v):
    self.value = v
: 함수를 통해서 인스턴스 변수에 접근 및 수정

def __init__(self, v):
    self.__value = v
: 앞에 __를 추가해주면 외부에서 인스턴스 변수에 접근 불가해짐

-변수
인스턴스 변수: 인스턴스들마다 값이 다름
클래스 변수: 해당 클래스 내 모든 인스턴스에서 동일한 값, 공유데이터 or 클래스 고유 속성을 나타낼 때 사용

-상속
class Class2(Class1):
    pass; # Class2가 Class1을 상속받음

-형태
class 클래스명:
    def __init__(self, 초기값):
        멤버 초기화
    메소드 정의
c1 = 클래스명(속성) #인스턴스 생성
c1.메소드 #호출

-클래스 맴버
클래스 내에 속한 변수와 메소드


# 모듈
변수, 함수, 클래스 등을 별도의 파일 하나로 만들어 놓은 것
모듈이 있는 디렉토리에서 스크립트 실행해야 됨

# 코드
if isinstance(v, int): # 만약 v가 정수라면

